{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/Users/lew/Tutorials/React/Simple_Clock/MyApp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/lew/Tutorials/React/Simple_Clock/MyApp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/lew/Tutorials/React/Simple_Clock/MyApp/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/lew/Tutorials/React/Simple_Clock/MyApp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/lew/Tutorials/React/Simple_Clock/MyApp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/lew/Tutorials/React/Simple_Clock/MyApp/pages/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\n\nvar Index = /*#__PURE__*/function (_React$Component) {\n  _inherits(Index, _React$Component);\n\n  var _super = _createSuper(Index);\n\n  function Index(props) {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      time: new Date().toLocaleString()\n    };\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"tick\",\n    value: function tick() {\n      this.setState(function () {\n        return {\n          time: new Date().toLocaleString()\n        };\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.interval = setInterval(function () {\n        return _this2.tick();\n      }, 1000);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.interval);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Hello: \", this.state.time]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 12\n      }, this);\n    }\n  }]);\n\n  return Index;\n}(React.Component);\n\nexport default index;","map":{"version":3,"sources":["/Users/lew/Tutorials/React/Simple_Clock/MyApp/pages/index.js"],"names":["React","Index","props","state","time","Date","toLocaleString","setState","interval","setInterval","tick","clearInterval","Component","index"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEMC,K;;;;;AAEJ,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,IAAIC,IAAJ,GAAWC,cAAX;AADK,KAAb;AAFiB;AAKlB;;;;2BAEM;AACL,WAAKC,QAAL,CAAe,YAAM;AACnB,eAAQ;AACNH,UAAAA,IAAI,EAAE,IAAIC,IAAJ,GAAWC,cAAX;AADA,SAAR;AAGD,OAJD;AAKD;;;wCAEmB;AAAA;;AAClB,WAAKE,QAAL,GAAgBC,WAAW,CAAE;AAAA,eAAM,MAAI,CAACC,IAAL,EAAN;AAAA,OAAF,EAAqB,IAArB,CAA3B;AACD;;;2CAEsB;AACrBC,MAAAA,aAAa,CAAC,KAAKH,QAAN,CAAb;AACD;;;6BAEQ;AACP,0BAAO;AAAA,8BAAY,KAAKL,KAAL,CAAWC,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;;;EA3BiBJ,KAAK,CAACY,S;;AA8B1B,eAAeC,KAAf","sourcesContent":["import React from 'react';\n\nclass Index extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: new Date().toLocaleString()\n    }\n  }\n\n  tick() {\n    this.setState( () => {\n      return ({\n        time: new Date().toLocaleString()\n      })\n    })\n  }\n\n  componentDidMount() {\n    this.interval = setInterval( () => this.tick(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    return <h1>Hello: {this.state.time}</h1>\n  }\n}\n\nexport default index;\n"]},"metadata":{},"sourceType":"module"}